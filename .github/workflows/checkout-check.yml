name: Block .env Files

on:
  # Run on pull requests
  pull_request:
    types: [opened, synchronize]

  # Run on direct pushes to protected branches
  push:
    branches:
      - main

jobs:
  check-env-files:
    name: Check for .env files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          # Fetch history to properly check file changes
          fetch-depth: 0

      - name: Detect .env files
        id: detect-env
        run: |
          # For pull requests
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "Checking files in pull request #${{ github.event.pull_request.number }}"
            BASE_SHA="${{ github.event.pull_request.base.sha }}"
            HEAD_SHA="${{ github.event.pull_request.head.sha }}"

            CHANGED_FILES=$(git diff --name-only --diff-filter=ACMRT $BASE_SHA $HEAD_SHA)
          else
            # For pushes
            echo "Checking files in push to ${{ github.ref_name }}"

            # If this is the first push to a branch
            if [[ "${{ github.event.before }}" == "0000000000000000000000000000000000000000" ]]; then
              # Check all files in the commit
              CHANGED_FILES=$(git ls-tree -r --name-only HEAD)
            else
              # Check only changed files
              CHANGED_FILES=$(git diff --name-only --diff-filter=ACMRT ${{ github.event.before }} ${{ github.event.after }})
            fi
          fi

          # Look for .env files in changes
          ENV_FILES=$(echo "$CHANGED_FILES" | grep -E "\.env($|\.)" || true)

          # Check if we found any .env files
          if [[ -n "$ENV_FILES" ]]; then
            echo "::error::Found .env files in changes:"
            echo "$ENV_FILES" | while read file; do
              echo "::error::  - $file"
            done

            # Store the list of found files
            echo "found_files<<EOF" >> $GITHUB_OUTPUT
            echo "$ENV_FILES" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT

            echo "has_env_files=true" >> $GITHUB_OUTPUT
          else
            echo "No .env files found in changes - check passed."
            echo "has_env_files=false" >> $GITHUB_OUTPUT
          fi

      - name: Fail if .env files found
        if: steps.detect-env.outputs.has_env_files == 'true'
        run: |
          echo "‚ùå Error: Attempt to commit .env files detected!"
          echo
          echo "The following sensitive files were found:"
          echo "${{ steps.detect-env.outputs.found_files }}"
          echo
          echo "Please remove these files from your commit and try again."
          echo "Consider adding an .env.example template instead."
          git rm --cached .env
          exit 1
